apiVersion: v1
kind: Template
metadata:
  annotations:
    description: ${SERVICE_NAME}
  name: ${SERVICE_NAME}
parameters:
- description: Name of the service
  displayName: Service Name
  name: SERVICE_NAME
- description: Git repository where service is stored
  displayName: GIT Service URL
  name: SERVICE_GIT_URL
- displayName: Git branch/tag reference
  name: GIT_REF
  required: true
- displayName: ContexDir
  name: CONTEXTDIR_TEMPL
  required: true
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${SERVICE_NAME}-pipeline
    labels:
      name: ${SERVICE_NAME}-pipeline
    annotations:
      pipeline.alpha.openshift.io/uses: >-
        [{"name": "${SERVICE_NAME}", "namespace": "", "kind":
        "DeploymentConfig"}]
  spec:
    runPolicy: Serial
    source:
      type: Git
      git:
        uri: ${SERVICE_GIT_URL}
        ref: master
    strategy:
      type: JenkinsPipeline
      env:
      - name: "SERVICE_NAME"
        value: ${SERVICE_NAME}
      - name: "SERVICE_GIT_URL"
        value: ${SERVICE_GIT_URL}
      - name: "GIT_REF"
        value: ${GIT_REF}
      - name: "CONTEXTDIR_TEMPL"
        value: ${CONTEXTDIR_TEMPL}
      jenkinsPipelineStrategy:
          jenkinsfile: |-
           node {
             stage('delete prev ver') {
               sh "oc delete all --selector app=ger"
               sh "oc delete all --selector application=ger"
             }
             stage('ImageStream') {
               dir('app') {
                 sh 'oc new-app -p APP_NAME=' + ${SERVICE_NAME} + ' -f https://raw.githubusercontent.com/gditrani269/OS-Pipeline-Gen/master/Templates-yaml/ImageStream.yaml'
               }
             }
             stage('BuildConfig') {
               dir('app') {
                 sh 'oc new-app -p APP_NAME=' + ${SERVICE_NAME} + ' -p GIT_URI=' + ${SERVICE_GIT_URL} + ' -p GIT_REF=' + ${GIT_REF} + ' -p CONTEXTDIR_TEMPL=' + ${SERVICE_GIT_URL} + ' -f https://raw.githubusercontent.com/gditrani269/OS-Pipeline-Gen/master/Templates-yaml/BuildConfig.yaml'
                 sh 'sleep 8'
                 sh 'oc logs -f bc/ger'
               }
             }
             stage('DeploymentConfig') {
               dir('app') {
                 sh 'oc new-app -p APP_NAME=' + ${SERVICE_NAME} + ' -f https://raw.githubusercontent.com/gditrani269/OS-Pipeline-Gen/master/Templates-yaml/DeploymentConfig.yaml'
                 sh 'sleep 10'
                 sh 'oc logs dc/ger'
               }
             }
             stage('Service') {
               dir('app') {
                 sh 'oc new-app -p APP_NAME=' + ${SERVICE_NAME} + ' -f https://raw.githubusercontent.com/gditrani269/OS-Pipeline-Gen/master/Templates-yaml/Service.yaml'
                 sh 'sleep 8'
                 sh 'oc logs svc/ger'
               }
             }
             stage('Route') {
               dir('app') {
                 sh 'oc new-app -p APP_NAME=' + ${SERVICE_NAME} + ' -f https://raw.githubusercontent.com/gditrani269/OS-Pipeline-Gen/master/Templates-yaml/Route.yaml'
                 sh 'sleep 8'
                 sh 'oc describe route/ger'
               }
             }
           } 
    output: {}
    resources: {}
    postCommit: {}
    completionDeadlineSeconds: 3600
    nodeSelector: {}
  status:
    lastVersion: 11
